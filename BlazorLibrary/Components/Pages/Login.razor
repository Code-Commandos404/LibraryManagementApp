@page "/login"
@rendermode InteractiveServer
@attribute [StreamRendering]
@using DataAccessLibrary
@using LibraryManagementApp.Models
@using MudBlazor
@using System.ComponentModel.DataAnnotations

<MudTextField T="string" @* @bind-Value="_addPeople.FirstName"     *@ Counter="50" MaxLength="50" HelperText="Please Input Your First Name" Immediate="true" Validation="@(new Func<string, IEnumerable<string>>(MaxCharacters))" Label="First Name" Variant="Variant.Text" />
<MudTextField T="string" @* @bind-Value="_addPeople.LastName"      *@ Counter="50" MaxLength="50" HelperText="Please Input Your Last Name" Immediate="true" Validation="@(new Func<string, IEnumerable<string>>(MaxCharacters))" Label="Last Name" Variant="Variant.Text" />
<MudTextField T="string" @* @bind-Value="_addPeople.ContactNumber" *@ Counter="12" MaxLength="12" HelperText="Please Input Your Contact Number" Immediate="true" Validation="@(new Func<string, IEnumerable<string>>(MaxCharacters))" Label="Contact Number" Variant="Variant.Text" />
<MudTextField T="string" @* @bind-Value="_addPeople.Address"       *@ Counter="100" MaxLength="100" HelperText="Please Input Your Address" Immediate="true" Validation="@(new Func<string, IEnumerable<string>>(MaxCharacters))" Label="Address" Variant="Variant.Text" />
<MudTextField T="string" @* @bind-Value="_addPeople.Email"         *@ Counter="100" MaxLength="100" HelperText="Please Input Your Email" Immediate="true" Validation="@(new Func<string, IEnumerable<string>>(MaxCharacters))" Label="Email" Variant="Variant.Text" />
<MudSelect T="string"    @* @bind-Value="  _addPeople.Gender"      *@ Label="Gender" HelperText="Please Choose Your Gender">
	<MudSelectItem Value="@("Male")">Male</MudSelectItem>
	<MudSelectItem Value="@("Female")">Female</MudSelectItem>
	<MudSelectItem Value="@("N/A")">N/A</MudSelectItem>
</MudSelect>

<br />
<br />
<MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" Label="Add Person" @* OnClick="" *@ />

@code {
    private MudForm form;

    private void OnValidChanged(bool valid)
    {
        StateHasChanged();
    }

	private IEnumerable<string> MaxCharacters(string ch)
	{
		if (!string.IsNullOrEmpty(ch) && 25 < ch?.Length)
			yield return "Max 25 characters";
	}


}

