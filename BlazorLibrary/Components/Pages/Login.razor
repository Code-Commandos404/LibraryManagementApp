@page "/login"
@rendermode InteractiveServer
@attribute [StreamRendering]
@using DataAccessLibrary
@using LibraryManagementApp.Models
@using MudBlazor
@using System.ComponentModel.DataAnnotations

<MudTextField T="string" @bind-Value="useremail" Counter="100" MaxLength="100" HelperText="Please Input Your Email" Immediate="true" Validation="@(new Func<string, IEnumerable<string>>(MaxCharacters))" Label="Email" Variant="Variant.Text" />
<br/>


<MudTextField @bind-Value="userpassword" Label="Password" Variant="Variant.Text" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ButtonTestclick" AdornmentAriaLabel="Show Password" />

<br />
<MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Login" Label="Sign in" /> @* OnClick="" *@

@code {
	string useremail ="";
	string userpassword = "";

	// private MudForm form;

    private void OnValidChanged(bool valid)
    {
        StateHasChanged();
    }

	private IEnumerable<string> MaxCharacters(string ch)
	{
		if (!string.IsNullOrEmpty(ch) && 25 < ch?.Length)
			yield return "Max 25 characters";
	}


	bool isShow;
	InputType PasswordInput = InputType.Password;
	string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

	void ButtonTestclick()
	{
		@if (isShow)
		{
			isShow = false;
			PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
			PasswordInput = InputType.Password;
		}
		else
		{
			isShow = true;
			PasswordInputIcon = Icons.Material.Filled.Visibility;
			PasswordInput = InputType.Text;
		}
	}

}

